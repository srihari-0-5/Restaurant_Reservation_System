-- Step 1: Drop the old database to ensure a fresh start
DROP DATABASE IF EXISTS restaurant_db;

-- Step 2: Create a new, empty database
CREATE DATABASE restaurant_db;

-- Step 3: Select the new database
USE restaurant_db;

-- Step 4: Create all the necessary tables
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL
);

CREATE TABLE dining_tables (
    id INT AUTO_INCREMENT PRIMARY KEY,
    table_number VARCHAR(10) NOT NULL UNIQUE,
    capacity INT NOT NULL
);

CREATE TABLE reservations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    contact_info VARCHAR(255) NOT NULL,
    reservation_date DATE NOT NULL,
    reservation_time TIME NOT NULL
);

CREATE TABLE reservation_tables (
    reservation_id INT NOT NULL,
    table_id INT NOT NULL,
    PRIMARY KEY (reservation_id, table_id),
    FOREIGN KEY (reservation_id) REFERENCES reservations(id) ON DELETE CASCADE,
    FOREIGN KEY (table_id) REFERENCES dining_tables(id) ON DELETE CASCADE
);

-- Step 5: Populate 'dining_tables' with the new 4x4 layout
INSERT INTO dining_tables (table_number, capacity) VALUES
('A1', 2), ('A2', 4), ('A3', 4), ('A4', 2),
('B1', 2), ('B2', 4), ('B3', 4), ('B4', 2),
('C1', 4), ('C2', 6), ('C3', 6), ('C4', 4),
('D1', 2), ('D2', 4), ('D3', 4), ('D4', 2);

-- Final check
SHOW TABLES;

ALTER TABLE reservations ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;


-- Step 1: Select your database to make sure you're in the right place
USE restaurant_db;

-- Step 2: Safely delete the old 'users' table if it exists
DROP TABLE IF EXISTS users;

-- Step 3: Create the new 'users' table with all the required columns
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    email VARCHAR(120) NOT NULL UNIQUE,
    phone_number VARCHAR(20) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Final check to confirm the new table structure
DESCRIBE users;


USE restaurant_db;

-- Step 1: Add a column to link reservations to users
ALTER TABLE reservations
ADD COLUMN user_id INT,
ADD FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL;

-- Step 2: Add 'Cancelled' as a possible status for reservations
-- Note: This command might differ slightly based on your MySQL version.
-- If this fails, you may need to drop and recreate the status column with the new options.
ALTER TABLE reservations
MODIFY COLUMN status VARCHAR(20) NOT NULL DEFAULT 'Pending';